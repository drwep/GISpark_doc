{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name: Rhedenstraße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.746874, Lon: 7.156307\n",
      "    Lat: 50.746598, Lon: 7.156237\n",
      "    Lat: 50.746477, Lon: 7.156199\n",
      "    Lat: 50.746360, Lon: 7.156124\n",
      "    Lat: 50.746263, Lon: 7.156023\n",
      "    Lat: 50.746194, Lon: 7.155926\n",
      "    Lat: 50.746139, Lon: 7.155843\n",
      "Name: Von-Ketteler-Straße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.746905, Lon: 7.155786\n",
      "    Lat: 50.747222, Lon: 7.155621\n",
      "Name: Mutter-Barat-Straße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.747989, Lon: 7.156302\n",
      "    Lat: 50.747934, Lon: 7.156229\n",
      "    Lat: 50.747695, Lon: 7.155421\n",
      "    Lat: 50.747605, Lon: 7.155159\n",
      "    Lat: 50.747241, Lon: 7.154310\n",
      "    Lat: 50.746939, Lon: 7.153634\n",
      "Name: Stegerwaldstraße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.747853, Lon: 7.153685\n",
      "    Lat: 50.747666, Lon: 7.154022\n",
      "    Lat: 50.747673, Lon: 7.154122\n",
      "    Lat: 50.747939, Lon: 7.154603\n",
      "    Lat: 50.748182, Lon: 7.155178\n",
      "    Lat: 50.748339, Lon: 7.155634\n",
      "Name: Alte Schulstraße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.747537, Lon: 7.158000\n",
      "    Lat: 50.747546, Lon: 7.157832\n",
      "    Lat: 50.747554, Lon: 7.157667\n",
      "    Lat: 50.747582, Lon: 7.157470\n",
      "    Lat: 50.747622, Lon: 7.157322\n",
      "    Lat: 50.747672, Lon: 7.157152\n",
      "    Lat: 50.747726, Lon: 7.157008\n",
      "    Lat: 50.747882, Lon: 7.156751\n",
      "    Lat: 50.748061, Lon: 7.156421\n",
      "    Lat: 50.748199, Lon: 7.156150\n",
      "    Lat: 50.748297, Lon: 7.155955\n",
      "    Lat: 50.748414, Lon: 7.155740\n",
      "    Lat: 50.748831, Lon: 7.155019\n",
      "    Lat: 50.749084, Lon: 7.154566\n",
      "    Lat: 50.749212, Lon: 7.154345\n",
      "    Lat: 50.749498, Lon: 7.153908\n",
      "    Lat: 50.749600, Lon: 7.153742\n",
      "    Lat: 50.749795, Lon: 7.153459\n",
      "    Lat: 50.749855, Lon: 7.153377\n",
      "    Lat: 50.750228, Lon: 7.152833\n",
      "Name: n/a\n",
      "  Highway: service\n",
      "  Nodes:\n",
      "    Lat: 50.746113, Lon: 7.155056\n",
      "    Lat: 50.745970, Lon: 7.154603\n",
      "Name: Mutter-Barat-Straße\n",
      "  Highway: footway\n",
      "  Nodes:\n",
      "    Lat: 50.748061, Lon: 7.156421\n",
      "    Lat: 50.747989, Lon: 7.156302\n",
      "Name: Von-Ketteler-Straße\n",
      "  Highway: residential\n",
      "  Nodes:\n",
      "    Lat: 50.747335, Lon: 7.152963\n",
      "    Lat: 50.746939, Lon: 7.153634\n",
      "    Lat: 50.746657, Lon: 7.154135\n",
      "    Lat: 50.746585, Lon: 7.154273\n",
      "    Lat: 50.746562, Lon: 7.154380\n",
      "    Lat: 50.746560, Lon: 7.154508\n",
      "    Lat: 50.746581, Lon: 7.154655\n",
      "    Lat: 50.746868, Lon: 7.155638\n",
      "    Lat: 50.746905, Lon: 7.155786\n",
      "    Lat: 50.746912, Lon: 7.155892\n",
      "    Lat: 50.746902, Lon: 7.156003\n",
      "    Lat: 50.746874, Lon: 7.156307\n",
      "    Lat: 50.746809, Lon: 7.156921\n",
      "    Lat: 50.746751, Lon: 7.157490\n",
      "Name: Von-Ketteler-Straße\n",
      "  Highway: service\n",
      "  Nodes:\n",
      "    Lat: 50.746562, Lon: 7.154380\n",
      "    Lat: 50.746207, Lon: 7.154436\n",
      "    Lat: 50.745970, Lon: 7.154603\n",
      "    Lat: 50.745895, Lon: 7.154570\n",
      "    Lat: 50.745810, Lon: 7.154439\n"
     ]
    }
   ],
   "source": [
    "import overpy\n",
    "\n",
    "api = overpy.Overpass()\n",
    "\n",
    "# fetch all ways and nodes\n",
    "result = api.query(\"\"\"\n",
    "    way(50.746,7.154,50.748,7.157) [\"highway\"];\n",
    "    (._;>;);\n",
    "    out body;\n",
    "    \"\"\")\n",
    "\n",
    "for way in result.ways:\n",
    "    print(\"Name: %s\" % way.tags.get(\"name\", \"n/a\"))\n",
    "    print(\"  Highway: %s\" % way.tags.get(\"highway\", \"n/a\"))\n",
    "    print(\"  Nodes:\")\n",
    "    for node in way.nodes:\n",
    "        print(\"    Lat: %f, Lon: %f\" % (node.lat, node.lon))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
